remote = require 'net.box'
---
...
fiber = require 'fiber'
---
...
log = require 'log'
---
...
LISTEN = require('uri').parse(box.cfg.listen)
---
...
space = box.schema.space.create('net_box_test_space')
---
...
index = space:create_index('primary', { type = 'tree' })
---
...
-- low level connection
log.info("create connection")
---
...
cn = remote.connect(LISTEN.host, LISTEN.service)
---
...
log.info("state is %s", cn.state)
---
...
cn:ping()
---
- true
...
log.info("ping is done")
---
...
cn:ping()
---
- true
...
log.info("ping is done")
---
...
cn:ping()
---
- true
...
-- check permissions
cn:call('unexists_procedure')
---
- error: Execute access to function 'unexists_procedure' is denied for user 'guest'
...
function test_foo(a,b,c) return { {{ [a] = 1 }}, {{ [b] = 2 }}, c } end
---
...
cn:call('test_foo', {'a', 'b', 'c'})
---
- error: Execute access to function 'test_foo' is denied for user 'guest'
...
cn:eval('return 2+2')
---
- error: Execute access to universe '' is denied for user 'guest'
...
cn:close()
---
...
-- connect and call without usage access
box.schema.user.grant('guest','execute','universe')
---
...
box.schema.user.revoke('guest','usage','universe')
---
...
box.session.su("guest")
---
...
cn = remote.connect(LISTEN.host, LISTEN.service)
---
...
cn:call('test_foo', {'a', 'b', 'c'})
---
- error: Usage access to universe '' is denied for user 'guest'
...
box.session.su("admin")
---
...
box.schema.user.grant('guest','usage','universe')
---
...
cn:close()
---
...
cn = remote.connect(box.cfg.listen)
---
...
cn:call('unexists_procedure')
---
- error: Procedure 'unexists_procedure' is not defined
...
cn:call('test_foo', {'a', 'b', 'c'})
---
- [[{'a': 1}], [{'b': 2}], 'c']
...
cn:call(nil, {'a', 'b', 'c'})
---
- error: Procedure 'nil' is not defined
...
cn:eval('return 2+2')
---
- 4
...
cn:eval('return 1, 2, 3')
---
- 1
- 2
- 3
...
cn:eval('return ...', {1, 2, 3})
---
- 1
- 2
- 3
...
cn:eval('return { k = "v1" }, true, {  xx = 10, yy = 15 }, nil')
---
- {'k': 'v1'}
- true
- {'yy': 15, 'xx': 10}
- null
...
cn:eval('return nil')
---
- null
...
cn:eval('return')
---
...
cn:eval('error("exception")')
---
- error: 'eval:1: exception'
...
cn:eval('box.error(0)')
---
- error: Unknown error
...
cn:eval('!invalid expression')
---
- error: 'eval:1: unexpected symbol near ''!'''
...
-- box.commit() missing at return of CALL/EVAL
function no_commit() box.begin() fiber.sleep(0.001) end
---
...
cn:call('no_commit')
---
- error: Transaction is active at return from function
...
cn:eval('no_commit()')
---
- error: Transaction is active at return from function
...
remote.self:eval('return 1+1, 2+2')
---
- 2
- 4
...
remote.self:eval('return')
---
...
remote.self:eval('error("exception")')
---
- error: '[string "error("exception")"]:1: exception'
...
remote.self:eval('box.error(0)')
---
- error: Unknown error
...
remote.self:eval('!invalid expression')
---
- error: '[string "return !invalid expression"]:1: unexpected symbol near ''!'''
...
box.schema.user.revoke('guest', 'execute', 'universe')
---
...
cn:close()
---
...
